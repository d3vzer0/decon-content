name: Icacls Deny Command
id: cf8d753e-a8fe-11eb-8f58-acde48001122
version: 1
date: '2023-06-06'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: This analytic identifies instances where an adversary modifies the security permissions of a particular file or directory. 
  This technique is frequently observed in the tradecraft of Advanced Persistent Threats (APTs) and coinminer scripts. 
  The purpose of this behavior is to actively evade detection and impede access to their associated files. 
  By identifying these security permission changes, we can enhance our ability to detect and respond to potential threats, 
  mitigating the impact of malicious activities on the system.
data_source:
- Sysmon Event ID 1
search: '| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes 
  where Processes.process_name IN( "icacls.exe", "cacls.exe", "xcacls.exe")
  AND Processes.process IN ("*/deny*", "*/D*") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_guid Processes.dest Processes.user 
  | `drop_dm_object_name(Processes)` 
  | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` 
  | `icacls_deny_command_filter`'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA. Tune and filter known instances where renamed icacls.exe may be used.
known_false_positives: Unknown. It is possible some administrative scripts use ICacls.
  Filter as needed.
references:
- https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/
tags:
  analytic_story:
  - XMRig
  - Azorult
  - Sandworm Tools
  asset_type: Endpoint
  confidence: 80
  impact: 90
  message: Process name $process_name$ with deny argument executed by $user$ to change
    security permission of a specific file or directory on host $dest$
  mitre_attack_id:
  - T1222
  observable:
  - name: dest
    type: Endpoint
    role:
    - Victim
  - name: user
    type: User
    role:
    - Victim
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.parent_process_name
  - Processes.process_name
  - Processes.dest
  - Processes.user
  - Processes.process_id
  - Processes.process
  risk_score: 72
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/xmrig_miner/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
